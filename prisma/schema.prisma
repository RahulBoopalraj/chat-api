// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// prisma/schema.prisma
datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum NotificationStatus {
  WEBSITE_VISITED
  USER_LOGGED_IN
  USER_LOGGED_OUT
  ITEM_ADDED_TO_CART
  ITEM_REMOVED_FROM_CART
  ITEM_PURCHASED
}

enum ActivityType {
  NO_ACTIVITY
  ACTIVITY_1
  ACTIVITY_2
  ACTIVITY_3
  ACTIVITY_4
  ACTIVITY_5
  ACTIVITY_6
  ACTIVITY_7
  ACTIVITY_8
}

model Notification {
  id                 String             @id @default(auto()) @map("_id") @db.ObjectId
  userId             String             @unique
  status             NotificationStatus
  additional_message String?
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
}

model UserActivity {
  id               String       @id @default(auto()) @map("_id") @db.ObjectId
  userId           String
  activityPosition Int
  activity         ActivityType
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt

  @@unique([userId, activityPosition])
}

model QnaFlow {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  flow      Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model QnaFlowResponse {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userid    String
  response  Json
  status    String
  notes     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  price       Int
  description String
  tags        String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
